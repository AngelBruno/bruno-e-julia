import"./firebase-config-Cap9RXTK.js";class c{constructor(){this.mesas=[],this.totalKeys=1e3,this.configuracao={totalChaves:1e3,statusJogo:"ativo"},this.historico=[],this.loadData=this.loadData.bind(this),this.renderMesas=this.renderMesas.bind(this),this.renderStats=this.renderStats.bind(this),this.renderHistory=this.renderHistory.bind(this),this.init()}async init(){this.setupEventListeners(),await this.loadData(),this.updateSelectOptions()}setupEventListeners(){document.getElementById("nova-mesa-form").addEventListener("submit",t=>this.handleNovaMesa(t)),document.getElementById("add-keys-form").addEventListener("submit",t=>this.handleAddKeys(t)),document.getElementById("remove-keys-form").addEventListener("submit",t=>this.handleRemoveKeys(t)),document.getElementById("config-form").addEventListener("submit",t=>this.handleConfig(t)),window.addEventListener("click",t=>{t.target.classList.contains("modal")&&(t.target.style.display="none")})}async loadData(){try{this.mesas=await this.getMockMesas(),this.configuracao=await this.getMockConfig(),this.historico=await this.getMockHistory(),this.renderMesas(),this.renderStats(),this.renderHistory()}catch(t){console.error("Erro ao carregar dados:",t),this.showError("Erro ao carregar dados. Tente recarregar a p√°gina.")}}async getMockMesas(){return[{id:1,nome:"MESA 01",chaves:20,ultimaAtualizacao:new Date},{id:2,nome:"MESA 02",chaves:330,ultimaAtualizacao:new Date},{id:3,nome:"MESA 03",chaves:50,ultimaAtualizacao:new Date},{id:5,nome:"MESA 05",chaves:420,ultimaAtualizacao:new Date},{id:8,nome:"MESA 08",chaves:180,ultimaAtualizacao:new Date},{id:11,nome:"MESA 11",chaves:250,ultimaAtualizacao:new Date},{id:15,nome:"MESA 15",chaves:100,ultimaAtualizacao:new Date}]}async getMockConfig(){return{totalChaves:1e3,statusJogo:"ativo"}}async getMockHistory(){return[{id:1,mesa:{nome:"MESA 05"},quantidade:50,motivo:"Completou desafio principal",dataHora:new Date(Date.now()-6e4)},{id:2,mesa:{nome:"MESA 02"},quantidade:30,motivo:"Participa√ß√£o ativa",dataHora:new Date(Date.now()-12e4)},{id:3,mesa:{nome:"MESA 11"},quantidade:-10,motivo:"Corre√ß√£o de pontua√ß√£o",dataHora:new Date(Date.now()-18e4)}]}renderMesas(){const t=document.getElementById("mesas-container");t.innerHTML="",[...this.mesas].sort((a,s)=>s.chaves-a.chaves).forEach((a,s)=>{const o=document.createElement("div");o.className="mesa-item";const n=s+1,r=n===1?"ü•á":n===2?"ü•à":n===3?"ü•â":`${n}¬∫`;o.innerHTML=`
                <div class="mesa-info">
                    <div class="mesa-nome">${r} ${a.nome}</div>
                    <div class="mesa-chaves">${a.chaves} chaves</div>
                </div>
                <div class="mesa-actions">
                    <button class="btn btn-sm btn-primary" onclick="adminSystem.quickAddKeys(${a.id})">
                        ‚ûï Chaves
                    </button>
                    <button class="btn btn-sm btn-secondary" onclick="adminSystem.editMesa(${a.id})">
                        ‚úèÔ∏è Editar
                    </button>
                </div>
            `,t.appendChild(o)})}renderStats(){const t=this.mesas.reduce((a,s)=>a+s.chaves,0),e=this.configuracao.totalChaves-t;document.getElementById("total-chaves").textContent=t,document.getElementById("total-mesas").textContent=this.mesas.length,document.getElementById("chaves-restantes").textContent=Math.max(0,e)}renderHistory(){const t=document.getElementById("history-container");if(t.innerHTML="",this.historico.length===0){t.innerHTML='<p class="loading">Nenhum registro encontrado.</p>';return}this.historico.forEach(e=>{const a=document.createElement("div");a.className=`history-item ${e.quantidade<0?"negative":""}`;const s=this.getTimeAgo(e.dataHora),o=e.quantidade>0?"Ganhou":e.quantidade<0?"Perdeu":"Redefiniu",n=Math.abs(e.quantidade);a.innerHTML=`
                <div>
                    <strong>${e.mesa.nome}</strong> ${o} ${n} chaves
                    ${e.motivo?`- ${e.motivo}`:""}
                </div>
                <div class="history-meta">${s}</div>
            `,t.appendChild(a)})}updateSelectOptions(){["add-mesa-select","remove-mesa-select"].forEach(e=>{const a=document.getElementById(e);a.innerHTML='<option value="">Selecione uma mesa</option>',this.mesas.forEach(s=>{const o=document.createElement("option");o.value=s.id,o.textContent=`${s.nome} (${s.chaves} chaves)`,a.appendChild(o)})})}async handleNovaMesa(t){t.preventDefault();const e=parseInt(document.getElementById("mesa-id").value),a=document.getElementById("mesa-nome").value.trim();if(this.mesas.find(s=>s.id===e)){this.showError("J√° existe uma mesa com este ID.");return}try{this.mesas.push({id:e,nome:a,chaves:0,ultimaAtualizacao:new Date}),document.getElementById("nova-mesa-form").reset(),this.renderMesas(),this.renderStats(),this.updateSelectOptions(),this.showSuccess("Mesa criada com sucesso!")}catch(s){console.error("Erro ao criar mesa:",s),this.showError("Erro ao criar mesa. Tente novamente.")}}async handleAddKeys(t){t.preventDefault();const e=parseInt(document.getElementById("add-mesa-select").value),a=parseInt(document.getElementById("add-quantidade").value),s=document.getElementById("add-motivo").value.trim();try{const o=this.mesas.find(n=>n.id===e);o&&(o.chaves+=a,o.ultimaAtualizacao=new Date),this.historico.unshift({id:Date.now(),mesa:{nome:o.nome},quantidade:a,motivo:s,dataHora:new Date}),closeModal("add-keys-modal"),document.getElementById("add-keys-form").reset(),this.renderMesas(),this.renderStats(),this.renderHistory(),this.updateSelectOptions(),this.showSuccess(`${a} chaves adicionadas √† ${o.nome}!`)}catch(o){console.error("Erro ao adicionar chaves:",o),this.showError("Erro ao adicionar chaves. Tente novamente.")}}async handleRemoveKeys(t){t.preventDefault();const e=parseInt(document.getElementById("remove-mesa-select").value),a=parseInt(document.getElementById("remove-quantidade").value),s=document.getElementById("remove-motivo").value.trim(),o=this.mesas.find(n=>n.id===e);if(!o||o.chaves<a){this.showError("A mesa n√£o possui chaves suficientes.");return}try{o.chaves-=a,o.ultimaAtualizacao=new Date,this.historico.unshift({id:Date.now(),mesa:{nome:o.nome},quantidade:-a,motivo:s,dataHora:new Date}),closeModal("remove-keys-modal"),document.getElementById("remove-keys-form").reset(),this.renderMesas(),this.renderStats(),this.renderHistory(),this.updateSelectOptions(),this.showSuccess(`${a} chaves removidas de ${o.nome}!`)}catch(n){console.error("Erro ao remover chaves:",n),this.showError("Erro ao remover chaves. Tente novamente.")}}async handleConfig(t){t.preventDefault();const e=parseInt(document.getElementById("total-chaves-config").value),a=document.getElementById("status-jogo").value;try{this.configuracao={totalChaves:e,statusJogo:a},closeModal("config-modal"),this.renderStats(),this.showSuccess("Configura√ß√µes atualizadas!")}catch(s){console.error("Erro ao atualizar configura√ß√µes:",s),this.showError("Erro ao atualizar configura√ß√µes. Tente novamente.")}}quickAddKeys(t){document.getElementById("add-mesa-select").value=t,document.getElementById("add-quantidade").value="10",openModal("add-keys-modal")}editMesa(t){const e=this.mesas.find(a=>a.id===t);if(e){const a=prompt(`Definir novo total de chaves para ${e.nome}:`,e.chaves);if(a!==null&&!isNaN(a)){const s=parseInt(a),o=s-e.chaves;e.chaves=s,e.ultimaAtualizacao=new Date,this.historico.unshift({id:Date.now(),mesa:{nome:e.nome},quantidade:o,motivo:"Edi√ß√£o manual",dataHora:new Date}),this.renderMesas(),this.renderStats(),this.renderHistory(),this.updateSelectOptions(),this.showSuccess(`Total de ${e.nome} atualizado para ${s} chaves!`)}}}getTimeAgo(t){const a=new Date-new Date(t),s=Math.floor(a/6e4);if(s<1)return"Agora mesmo";if(s<60)return`${s} min atr√°s`;const o=Math.floor(s/60);return o<24?`${o}h atr√°s`:`${Math.floor(o/24)} dias atr√°s`}showSuccess(t){const e=document.createElement("div");e.style.cssText=`
            position: fixed; top: 20px; right: 20px; z-index: 1001;
            background: #28a745; color: white; padding: 15px 20px;
            border-radius: 8px; box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        `,e.textContent=t,document.body.appendChild(e),setTimeout(()=>{document.body.removeChild(e)},3e3)}showError(t){const e=document.createElement("div");e.style.cssText=`
            position: fixed; top: 20px; right: 20px; z-index: 1001;
            background: #dc3545; color: white; padding: 15px 20px;
            border-radius: 8px; box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        `,e.textContent=t,document.body.appendChild(e),setTimeout(()=>{document.body.removeChild(e)},5e3)}}window.openModal=i=>{document.getElementById(i).style.display="block"};window.closeModal=i=>{document.getElementById(i).style.display="none"};window.resetGame=()=>{confirm("Tem certeza que deseja resetar o jogo? Esta a√ß√£o n√£o pode ser desfeita.")&&alert("Funcionalidade de reset ser√° implementada com o Firebase Data Connect.")};let d;document.addEventListener("DOMContentLoaded",()=>{d=new c,document.getElementById("total-chaves-config").value=1e3,document.getElementById("status-jogo").value="ativo"});window.adminSystem=null;document.addEventListener("DOMContentLoaded",()=>{window.adminSystem=d});
